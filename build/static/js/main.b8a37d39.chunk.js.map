{"version":3,"sources":["components/CommonDialog.js","components/FormDialog.js","App.js","index.js"],"names":["CommonDialog","msg","isOpen","doYes","doNo","React","useState","open","setOpen","useEffect","Dialog","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","DialogActions","Button","onClick","color","FormDialog","doClose","commDlg","setCommDlg","handleCancel","TransitionComponent","Transition","DialogTitle","id","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","console","log","forwardRef","props","ref","Slide","direction","App","className","Paper","Typography","variant","component","ReactDOM","render","document","getElementById"],"mappings":"iRAwCeA,EAhCP,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAAU,EAEdC,IAAMC,UAAS,GAFD,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAQtC,OAJAC,qBAAU,WACRD,EAAQN,KACP,CAACA,IAGA,6BACE,kBAACQ,EAAA,EAAD,CACIH,KAAMA,EACNI,aAAW,EACXC,QAAS,kBAAMR,KACfS,kBAAgB,sBAChBC,mBAAiB,6BAEnB,kBAACC,EAAA,EAAD,KACGd,GAEH,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMd,KAAQe,MAAM,WAArC,MAGA,kBAACF,EAAA,EAAD,CAAQC,QAAS,kBAAMf,KAASgB,MAAM,WAAtC,W,QC6CGC,EAjEsB,SAAC,GAAyB,IAAvBlB,EAAsB,EAAtBA,OAAQmB,EAAc,EAAdA,QAAc,EAEpChB,IAAMC,UAAS,GAFqB,mBAErDC,EAFqD,KAE/CC,EAF+C,OAG9BH,IAAMC,UAAS,GAHe,mBAGrDgB,EAHqD,KAG5CC,EAH4C,KAK5Dd,qBAAU,WACRD,EAAQN,KACR,CAACA,IAEH,IAIMsB,EAAe,WACnBhB,GAAQ,GACRa,KASF,OACI,6BACE,kBAACX,EAAA,EAAD,CACIH,KAAMA,EACNK,QAASY,EACTC,oBAAqBC,EACrBf,aAAW,EACXE,kBAAgB,qBAClB,kBAACc,EAAA,EAAD,CAAaC,GAAG,qBAAhB,eAGA,kBAACb,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACPJ,GAAG,OACHK,MAAM,gBACNC,KAAK,QACLC,WAAS,KAGf,kBAACnB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASM,EAAcL,MAAM,WAArC,kCAGA,kBAACF,EAAA,EAAD,CAAQC,QA1CD,WACfK,GAAW,IAyCwBJ,MAAM,WAAjC,kBAKJ,kBAAC,EAAD,CACIlB,IAAK,6CACLC,OAAQoB,EACRnB,MAzCM,WACdoB,GAAW,GACXC,IACAY,QAAQC,IAAI,YAuCJjC,KAAM,WAAOmB,GAAW,QAO9BG,EAAarB,IAAMiC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OC7C9BI,EA7BH,WAAO,IAAD,EACUtC,IAAMC,UAAS,GADzB,mBACPC,EADO,KACDC,EADC,KAWd,OACI,yBAAKoC,UAAU,aACX,kBAACC,EAAA,EAAD,CAAOD,UAAU,QACb,kBAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,mDAGA,kBAAC/B,EAAA,EAAD,CAAQ8B,QAAQ,YAAY5B,MAAM,UAAUD,QAdrC,WACfV,GAAQ,KAaA,QAGA,kBAAC,EAAD,CACIN,OAAQK,EACRc,QAAS,WAdrBb,GAAQ,SCVhByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b8a37d39.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nconst CommonDialog: React.FunctionComponent<\r\n    { msg: any, isOpen: any, doYes: any, doNo: any }\r\n    > = ({msg, isOpen, doYes, doNo}) => {\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n  return (\r\n      <div>\r\n        <Dialog\r\n            open={open}\r\n            keepMounted\r\n            onClose={() => doNo()}\r\n            aria-labelledby=\"common-dialog-title\"\r\n            aria-describedby=\"common-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            {msg}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => doNo()} color=\"primary\">\r\n              No\r\n            </Button>\r\n            <Button onClick={() => doYes()} color=\"primary\">\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n  )\r\n}\r\nexport default CommonDialog\r\n","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CommonDialog from \"./CommonDialog\";\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst FormDialog:React.FunctionComponent<\r\n    { isOpen: any, doClose: any }> = ({ isOpen, doClose }) => {\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const [commDlg, setCommDlg] = React.useState(false)\r\n\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n  },[isOpen])\r\n\r\n  const handleDo = () => {\r\n    setCommDlg(true)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false)\r\n    doClose()\r\n  }\r\n\r\n  const execute = () => {\r\n    setCommDlg(false)\r\n    handleCancel()\r\n    console.log('execute')\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleCancel}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Material-UI\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n            </DialogContentText>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Email Address\"\r\n                type=\"email\"\r\n                fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCancel} color=\"primary\">\r\n              キャンセル\r\n            </Button>\r\n            <Button onClick={handleDo} color=\"primary\">\r\n              登録\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <CommonDialog\r\n            msg={\"登録しますか？\"}\r\n            isOpen={commDlg}\r\n            doYes={execute}\r\n            doNo={() => {setCommDlg(false)}}\r\n        />\r\n      </div>\r\n  )\r\n}\r\nexport default FormDialog\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormDialog from \"./components/FormDialog\";\n\nconst App = () => {\n    const [open, setOpen] = React.useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <div className=\"container\">\n            <Paper className=\"item\">\n                <Typography variant=\"h5\" component=\"h3\">\n                    Reactか、それ以外か\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n                    OPEN\n                </Button>\n                <FormDialog\n                    isOpen={open}\n                    doClose={() => handleClose()}\n                />\n            </Paper>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}